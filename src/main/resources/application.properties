server.port=8082
server.servlet.contextPath=/

### MySQL
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/demo
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.dialect= org.hibernate.dialect.MySQL5DialectySQL5Dialect

spring.jpa.show-sql=true

# Hikari will use the above plus the following to setup connection pooling
connectionTestQuery=SELECT 1
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.pool-prepared-statements=true
spring.datasource.max-open-prepared-statements=250

# Enable logging to verify that HikariCP is used, the second entry is specific to HikariCP
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

### Postgres
#spring.datasource.url=jdbc:postgresql://172.17.0.2:5432/test
#spring.datasource.username=test
#spring.datasource.password=123123

### The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect